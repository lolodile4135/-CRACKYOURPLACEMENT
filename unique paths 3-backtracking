class Solution {
   
    int empty = 0;
    public int uniquePathsIII(int[][] grid) {
        
        int m = grid.length;
        int n = grid[0].length;
        int startx = 0;
        int starty = 0;

        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (grid[i][j] == 0)
                    empty++;
                else if (grid[i][j] == 1) {
                    startx = i;
                    starty = j;
                }

            }
        }

        return f(grid, startx, starty);
        
    }

    public int  f(int grid[][], int i, int j) {
        if (i < 0 || i >= grid.length || j < 0 || j >= grid[0].length || grid[i][j]==-1)
            return 0;
        if (grid[i][j] == 2) {
           if(empty==-1){
            return 1;
           }else{
            return 0;
           }
        }
        grid[i][j] = -1;
        empty--;
        int total=f(grid, i, j - 1)+ f(grid, i + 1, j)+f(grid, i, j + 1)+f(grid, i + 1, j);
        grid[i][j] = 0;
        empty++;
        return total;

    }
}
