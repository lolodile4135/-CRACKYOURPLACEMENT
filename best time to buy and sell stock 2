class Solution {
    public int maxProfit(int[] prices) {
        int dp[][]=new int[prices.length][2];
        for(int i=0;i<dp.length;i++){
            for(int j=0;j<dp[0].length;j++){
                dp[i][j]=-1;
            }
        }
        return helper(prices,0,1,dp);
        
    }
    public static int helper(int prices[],int i,int buy,int dp[][]){
        if(i==prices.length){
            return 0;
        }
        if(dp[i][buy]!=-1){
            return dp[i][buy];
        }
        int profit=0;
        if(buy==1){
           profit=Math.max(-prices[i]+helper(prices,i+1,0,dp),helper(prices,i+1,1,dp));
        }else{
            profit=Math.max(prices[i]+helper(prices,i+1,1,dp),helper(prices,i+1,0,dp));
        }
        return dp[i][buy]=profit;
    }
}
