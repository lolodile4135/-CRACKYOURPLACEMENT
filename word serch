class Solution {
    public boolean exist(char[][] board, String word) {
        int idx=0;
        int m=board.length;
        int n=board[0].length;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(board[i][j]==word.charAt(idx)){
                    if(helper(board,word,idx,i,j,m,n)){
                        return true;
                    }
                }
            }
        }
        return false;
    }
    public static boolean helper(char board[][],String word,int idx,int i,int j,int m,int n){
        if(idx==word.length())return true;
        if(i==m || j==n || i<0 || j<0 || board[i][j]=='!' || board[i][j]!=word.charAt(idx))return false;
       
      
        char c=board[i][j];
        board[i][j]='!';
        boolean left=helper(board,word,idx+1,i,j-1,m,n);
        boolean right=helper(board,word,idx+1,i,j+1,m,n);
        boolean top=helper(board,word,idx+1,i-1,j,m,n);
        boolean bottom=helper(board,word,idx+1,i+1,j,m,n);
        board[i][j]=c;
        return left || right || top || bottom;
    }
}
